name: Dependabot PR changeset
description: Add/update changeset files for Dependabot PR.
  This action is used in the context of a pull request created by Dependabot.
  It creates a changeset files in the `.changeset` directory.

inputs:
  updated-dependencies-json:
    required: true
    description: "JSON string with updated dependencies from dependabot/fetch-metadata action"
  version-update-map:
    required: false
    description: "Map version updates from dependabot/fetch-metadata action to changeset types"
    default: '{"semver-patch": "patch", "semver-minor": "patch", "semver-major": "patch"}'
outputs:
  changesets-json:
    description: "Json array of changeset files created or updated"
    value: ${{ steps.generate-changesets.outputs.changesets-json }}

runs:
  using: "composite"
  steps:
    - run: echo ${{ inputs.updated-dependencies-json }} | jq -r '.[]'
      shell: bash
    - run: exit -1
      shell: bash
    - id: generate-changesets
      shell: bash
      # scan updated-dependencies-json array from (dependabot/fetch-metadata)
      # get package name from .directory/package.json
      # get version-update from dependabot/fetch-metadata and map it to changeset type
      # create changeset file in .changeset directory per updated dependency
      run: |
        declare changesets_json="[]"
        # loop through updated-dependencies-json array
        for dep in echo ${{ inputs.updated-dependencies-json }} | jq -r '.[]'; do
          echo "dep: $dep"
        done
        exit -1
        for dep in "${{ inputs.updated-dependencies-json }}" | jq -r '.[]'; do
          echo "dep: $dep"
          _jq() {
            echo ${dep} | jq -r ${1}
          }
          echo "jq: $(_jq '.')"
          PKG_DIR=$(_jq '.directory')
          echo "PKG_DIR: $PKG_DIR"
          PKG_DIR=${PKG_DIR:1}
          echo "PKG_DIR: $PKG_DIR"
          PKG_JSON="$PKG_DIR/package.json"
          echo "PKG_JSON: $PKG_JSON"
          PKG_NAME=$(jq -r '.name' $PKG_JSON)
          echo "PKG_NAME: $PKG_NAME"
          DEP_NAME=$(_jq '.dependencyName')
          echo "DEP_NAME: $DEP_NAME"
          DEP_PREV_VERSION=$(_jq '.prevVersion')
          echo "DEP_PREV_VERSION: $DEP_PREV_VERSION"
          DEP_NEW_VERSION=$(_jq '.newVersion')
          echo "DEP_NEW_VERSION: $DEP_NEW_VERSION"
          DEP_DEPENDENCY_TYPE=$(_jq '.dependencyType')
          echo "DEP_DEPENDENCY_TYPE: $DEP_DEPENDENCY_TYPE"
          DEP_UPDATE_TYPE=$(_jq '.updateType') 
          echo "DEP_UPDATE_TYPE: $DEP_UPDATE_TYPE"
          # version-update:semver-major, version-update:semver-minor, version-update:semver-patch => semver-major, semver-minor, semver-patch
          DEP_SEMVER_TYPE=$(echo $DEP_UPDATE_TYPE | cut -d':' -f2)
          echo "DEP_SEMVER_TYPE: $DEP_SEMVER_TYPE"
          DEP_CHANGESET_TYPE=$(echo "${{ inputs.version-update-map }}" | jq -r --arg semver_type "$DEP_SEMVER_TYPE" '.[$semver_type]')
          echo "DEP_CHANGESET_TYPE: $DEP_CHANGESET_TYPE"
          # changeset file = ./.changeset/<directory-with-replaced-special-symbols>-<package-name>.md
          CHANGESET_FILE="./.changeset/${PKG_DIR//\//-}-${PKG_NAME}.md"
          # if file does not exist, create it
          # if it exists, append to it
          if [ ! -f $CHANGESET_FILE ]; then
            echo "---" >> $CHANGESET_FILE
            echo "$PKG_NAME: $DEP_CHANGESET_TYPE" >> $CHANGESET_FILE
            echo "---" >> $CHANGESET_FILE
            echo "" >> $CHANGESET_FILE
          fi
          # append to changeset file
          # $DEP_PREV_VERSION & $DEP_NEW_VERSION seem not to be set, so do with if statement for the future: if they are set then add to string, otherwise just say "update $DEP_NAME"
          if [ -n "$DEP_PREV_VERSION" ] && [ -n "$DEP_NEW_VERSION" ]; then
            echo "dependabot: update $DEP_NAME from $DEP_PREV_VERSION to $DEP_NEW_VERSION" >> $CHANGESET_FILE
          else
            echo "dependabot: update $DEP_NAME" >> $CHANGESET_FILE
          fi
          # append output - json array of created or updated changeset files
          changesets_json=$(echo $changesets_json | jq --arg file $CHANGESET_FILE '. + [$file]')
        done
        echo "changesets-json=$changesets_json" >> $GITHUB_OUTPUT
        echo "changesets-json: $changesets_json"
