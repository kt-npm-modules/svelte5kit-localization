name: Dependabot auto-merge
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
      - run: ${{ tojson(github) }}
        shell: cat {0}
  dependabot:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.WORKFLOW_APP_ID }}
          private-key: ${{ secrets.WORKFLOW_APP_PRIVATE_KEY }}
      - id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      # - id: committer
      #   run: |
      #     echo "user=${{ steps.app-token.outputs.app-slug }}[bot]" >> "$GITHUB_OUTPUT"
      #     echo "email=${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com" >> "$GITHUB_OUTPUT"
      #     echo "full=${{ steps.app-token.outputs.app-slug }}[bot] <${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>"  >> "$GITHUB_OUTPUT"
      # - run: |
      #     echo "committer user is ${{ steps.committer.outputs.user }}"
      #     echo "committer email is ${{ steps.committer.outputs.email }}"
      #     echo "committer string is ${{ steps.committer.outputs.full }}"

      - id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ steps.app-token.outputs.token }}
      - run: ${{ tojson(steps.metadata.outputs.updated-dependencies-json) }}
        shell: cat {0}
      - run: echo ${{ steps.metadata.outputs.updated-dependencies-json }} > $RUNNER_TEMP/dependencies.json
      - run: |
          cat $RUNNER_TEMP/dependencies.json
          exit -1
      # read array from echo steps.dependabot-metadata.outputs.updated-dependencies-json
      - run: |
          echo "${{ steps.metadata.outputs.updated-dependencies-json }}"
          echo "${{ steps.metadata.outputs.updated-dependencies-json }}" | jq -r '.[]'
          exit -1
          # for dep in "${{ steps.metadata.outputs.updated-dependencies-json }}" | jq -r '.[]'; do
          #   echo "dep: $dep"
          # done
          # exit -1
        shell: bash

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ steps.app-token.outputs.token }}
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          # This fails with the push command
          # persist-credentials: false

      - uses: ./.github/actions/dependabot-npm-generate-changesets
        with:
          updated-dependencies-json: ${{ tojson(steps.metadata.outputs.updated-dependencies-json) }}
          version-update-map: '{"semver-patch": "patch", "semver-minor": "patch", "semver-major": "patch"}'

      - run: |
          git add .changeset
          git commit -m "Add changesets for Dependabot PR"
          git push
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Enable auto-merge for Dependabot PRs
        if: |
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' || 
            steps.metadata.outputs.update-type == 'version-update:semver-patch')
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
