name: Release

on:
  status
  # check_suite:
  #   types: [completed]
  #   branches:
  #     - master
  # workflow_run:
  #   workflows: ["CI"]
  #   types:
  #     - completed

# concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions: {}
jobs:
  if_error_or_failure:
    runs-on: ubuntu-latest
    if: >-
      github.event.state == 'error' ||
      github.event.state == 'failure' ||
      github.event.state == 'success' ||
      github.event.state == 'pending'
    steps:
      - env:
          DESCRIPTION: ${{ github.event.description }}
        run: |
          echo The status is error or failed: $DESCRIPTION
  echo:
    runs-on: ubuntu-latest
    steps:
      - run: ${{ tojson(github) }}
        shell: cat {0}
  release:
    # prevents this action from running on forks
    if: ${{ github.repository == 'ktarmyshov/svelte5kit-localization' && github.ref == 'refs/heads/master' && github.event.workflow_run.event == 'push' && github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # to create release (changesets/action)
      id-token: write # OpenID Connect token needed for provenance
      pull-requests: write # to create pull request (changesets/action)
    name: Release
    runs-on: ubuntu-latest
    steps:
      - id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.MERGEPRBOT_APP_ID }}
          private_key: ${{ secrets.MERGEPRBOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - id: changesets
        uses: changesets/action@v1
        with:
          #   # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: npm run changeset:publish
          version: npm run changeset:version
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          NPM_CONFIG_PROVENANCE: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
